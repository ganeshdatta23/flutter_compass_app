{"dependencies":[{"name":"@babel/runtime/helpers/objectWithoutPropertiesLoose","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"HFkXuFcBAqfzGtqyPj8g62MKT0M=","exportNames":["*"],"imports":1}},{"name":"expo-modules-core","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":45,"index":45}}],"key":"fU8WLIPqoAGygnPbZ/QJiQQfXEY=","exportNames":["*"],"imports":1}},{"name":"./resolveAssetSource","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":47},"end":{"line":3,"column":54,"index":101}}],"key":"qiXdfzfF08Pne6HL41q9H4FDwsA=","exportNames":["*"],"imports":1}},{"name":"./resolveHashString","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":102},"end":{"line":4,"column":84,"index":186}}],"key":"lCGXVqBXYTWy+eggX9g5j1ljhdQ=","exportNames":["*"],"imports":1}},{"name":"../utils","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":263},"end":{"line":6,"column":38,"index":301}}],"key":"mL7nJyZhzUYx+zMcIt1cBzVuRps=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  const _excluded = [\"blurhash\", \"thumbhash\"];\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  exports.isBlurhashString = isBlurhashString;\n  exports.isThumbhashString = isThumbhashString;\n  exports.resolveSource = resolveSource;\n  exports.resolveSources = resolveSources;\n  var _babelRuntimeHelpersObjectWithoutPropertiesLoose = require(_dependencyMap[0], \"@babel/runtime/helpers/objectWithoutPropertiesLoose\");\n  var _objectWithoutPropertiesLoose = _interopDefault(_babelRuntimeHelpersObjectWithoutPropertiesLoose);\n  var _expoModulesCore = require(_dependencyMap[1], \"expo-modules-core\");\n  var _resolveAssetSource = require(_dependencyMap[2], \"./resolveAssetSource\");\n  var resolveAssetSource = _interopDefault(_resolveAssetSource);\n  var _resolveHashString = require(_dependencyMap[3], \"./resolveHashString\");\n  var _utils = require(_dependencyMap[4], \"../utils\");\n  function isBlurhashString(str) {\n    return /^(blurhash:\\/)+[\\w#$%*+,\\-.:;=?@[\\]^_{}|~]+(\\/[\\d.]+)*$/.test(str);\n  }\n\n  // Base64 strings will be recognized as blurhash by default (to keep compatibility),\n  // interpret as thumbhash only if correct uri scheme is provided\n  function isThumbhashString(str) {\n    return str.startsWith('thumbhash:/');\n  }\n  function resolveSource(source) {\n    if (typeof source === 'string') {\n      if (isBlurhashString(source)) {\n        return (0, _resolveHashString.resolveBlurhashString)(source);\n      } else if (isThumbhashString(source)) {\n        return (0, _resolveHashString.resolveThumbhashString)(source);\n      }\n      return {\n        uri: source\n      };\n    }\n    if (typeof source === 'number') {\n      return (0, resolveAssetSource.default)(source);\n    }\n    if (typeof source === 'object' && (source?.blurhash || source?.thumbhash)) {\n      const {\n          blurhash,\n          thumbhash\n        } = source,\n        restSource = (0, _objectWithoutPropertiesLoose.default)(source, _excluded);\n      const resolved = thumbhash ? (0, _resolveHashString.resolveThumbhashString)(thumbhash) : (0, _resolveHashString.resolveBlurhashString)(blurhash);\n      return Object.assign({}, resolved, restSource);\n    }\n    return source ?? null;\n  }\n\n  /**\n   * Resolves provided `source` prop to an array of objects expected by the native implementation.\n   */\n  function resolveSources(sources) {\n    if (Array.isArray(sources)) {\n      return sources.map(resolveSource).filter(Boolean);\n    }\n    if ((0, _utils.isImageRef)(sources)) {\n      if (_expoModulesCore.Platform.OS === 'web') {\n        return sources;\n      }\n      // @ts-expect-error\n      return sources.__expo_shared_object_id__;\n    }\n    return [resolveSource(sources)].filter(Boolean);\n  }\n});","lineCount":75,"map":[[13,2,8,0,"exports"],[13,9,8,0],[13,10,8,0,"isBlurhashString"],[13,26,8,0],[13,29,8,0,"isBlurhashString"],[13,45,8,0],[14,2,14,0,"exports"],[14,9,14,0],[14,10,14,0,"isThumbhashString"],[14,27,14,0],[14,30,14,0,"isThumbhashString"],[14,47,14,0],[15,2,18,0,"exports"],[15,9,18,0],[15,10,18,0,"resolveSource"],[15,23,18,0],[15,26,18,0,"resolveSource"],[15,39,18,0],[16,2,46,0,"exports"],[16,9,46,0],[16,10,46,0,"resolveSources"],[16,24,46,0],[16,27,46,0,"resolveSources"],[16,41,46,0],[17,2,58,1],[17,6,58,1,"_babelRuntimeHelpersObjectWithoutPropertiesLoose"],[17,54,58,1],[17,57,58,1,"require"],[17,64,58,1],[17,65,58,1,"_dependencyMap"],[17,79,58,1],[18,2,58,1],[18,6,58,1,"_objectWithoutPropertiesLoose"],[18,35,58,1],[18,38,58,1,"_interopDefault"],[18,53,58,1],[18,54,58,1,"_babelRuntimeHelpersObjectWithoutPropertiesLoose"],[18,102,58,1],[19,2,1,0],[19,6,1,0,"_expoModulesCore"],[19,22,1,0],[19,25,1,0,"require"],[19,32,1,0],[19,33,1,0,"_dependencyMap"],[19,47,1,0],[20,2,3,0],[20,6,3,0,"_resolveAssetSource"],[20,25,3,0],[20,28,3,0,"require"],[20,35,3,0],[20,36,3,0,"_dependencyMap"],[20,50,3,0],[21,2,3,0],[21,6,3,0,"resolveAssetSource"],[21,24,3,0],[21,27,3,0,"_interopDefault"],[21,42,3,0],[21,43,3,0,"_resolveAssetSource"],[21,62,3,0],[22,2,4,0],[22,6,4,0,"_resolveHashString"],[22,24,4,0],[22,27,4,0,"require"],[22,34,4,0],[22,35,4,0,"_dependencyMap"],[22,49,4,0],[23,2,6,0],[23,6,6,0,"_utils"],[23,12,6,0],[23,15,6,0,"require"],[23,22,6,0],[23,23,6,0,"_dependencyMap"],[23,37,6,0],[24,2,8,7],[24,11,8,16,"isBlurhashString"],[24,27,8,32,"isBlurhashString"],[24,28,8,33,"str"],[24,31,8,44],[24,33,8,55],[25,4,9,2],[25,11,9,9],[25,68,9,66],[25,69,9,67,"test"],[25,73,9,71],[25,74,9,72,"str"],[25,77,9,75],[25,78,9,76],[26,2,10,0],[28,2,12,0],[29,2,13,0],[30,2,14,7],[30,11,14,16,"isThumbhashString"],[30,28,14,33,"isThumbhashString"],[30,29,14,34,"str"],[30,32,14,45],[30,34,14,56],[31,4,15,2],[31,11,15,9,"str"],[31,14,15,12],[31,15,15,13,"startsWith"],[31,25,15,23],[31,26,15,24],[31,39,15,37],[31,40,15,38],[32,2,16,0],[33,2,18,7],[33,11,18,16,"resolveSource"],[33,24,18,29,"resolveSource"],[33,25,18,30,"source"],[33,31,18,75],[33,33,18,97],[34,4,19,2],[34,8,19,6],[34,15,19,13,"source"],[34,21,19,19],[34,26,19,24],[34,34,19,32],[34,36,19,34],[35,6,20,4],[35,10,20,8,"isBlurhashString"],[35,26,20,24],[35,27,20,25,"source"],[35,33,20,31],[35,34,20,32],[35,36,20,34],[36,8,21,6],[36,15,21,13],[36,19,21,13,"resolveBlurhashString"],[36,37,21,34],[36,38,21,34,"resolveBlurhashString"],[36,59,21,34],[36,61,21,35,"source"],[36,67,21,41],[36,68,21,42],[37,6,22,4],[37,7,22,5],[37,13,22,11],[37,17,22,15,"isThumbhashString"],[37,34,22,32],[37,35,22,33,"source"],[37,41,22,39],[37,42,22,40],[37,44,22,42],[38,8,23,6],[38,15,23,13],[38,19,23,13,"resolveThumbhashString"],[38,37,23,35],[38,38,23,35,"resolveThumbhashString"],[38,60,23,35],[38,62,23,36,"source"],[38,68,23,42],[38,69,23,43],[39,6,24,4],[40,6,25,4],[40,13,25,11],[41,8,25,13,"uri"],[41,11,25,16],[41,13,25,18,"source"],[42,6,25,25],[42,7,25,26],[43,4,26,2],[44,4,27,2],[44,8,27,6],[44,15,27,13,"source"],[44,21,27,19],[44,26,27,24],[44,34,27,32],[44,36,27,34],[45,6,28,4],[45,13,28,11],[45,17,28,11,"resolveAssetSource"],[45,35,28,29],[45,36,28,29,"default"],[45,43,28,29],[45,45,28,30,"source"],[45,51,28,36],[45,52,28,37],[46,4,29,2],[47,4,30,2],[47,8,30,6],[47,15,30,13,"source"],[47,21,30,19],[47,26,30,24],[47,34,30,32],[47,39,30,37,"source"],[47,45,30,43],[47,47,30,45,"blurhash"],[47,55,30,53],[47,59,30,57,"source"],[47,65,30,63],[47,67,30,65,"thumbhash"],[47,76,30,74],[47,77,30,75],[47,79,30,77],[48,6,31,4],[48,12,31,10],[49,10,31,12,"blurhash"],[49,18,31,20],[50,10,31,22,"thumbhash"],[51,8,31,47],[51,9,31,48],[51,12,31,51,"source"],[51,18,31,57],[52,8,31,36,"restSource"],[52,18,31,46],[52,25,31,46,"_objectWithoutPropertiesLoose"],[52,54,31,46],[52,55,31,46,"default"],[52,62,31,46],[52,64,31,51,"source"],[52,70,31,57],[52,72,31,57,"_excluded"],[52,81,31,57],[53,6,32,4],[53,12,32,10,"resolved"],[53,20,32,18],[53,23,32,21,"thumbhash"],[53,32,32,30],[53,35,33,8],[53,39,33,8,"resolveThumbhashString"],[53,57,33,30],[53,58,33,30,"resolveThumbhashString"],[53,80,33,30],[53,82,33,31,"thumbhash"],[53,91,33,40],[53,92,33,41],[53,95,34,8],[53,99,34,8,"resolveBlurhashString"],[53,117,34,29],[53,118,34,29,"resolveBlurhashString"],[53,139,34,29],[53,141,34,30,"blurhash"],[53,149,34,48],[53,150,34,49],[54,6,35,4],[54,13,35,4,"Object"],[54,19,35,4],[54,20,35,4,"assign"],[54,26,35,4],[54,31,36,9,"resolved"],[54,39,36,17],[54,41,37,9,"restSource"],[54,51,37,19],[55,4,39,2],[56,4,40,2],[56,11,40,9,"source"],[56,17,40,15],[56,21,40,19],[56,25,40,23],[57,2,41,0],[59,2,43,0],[60,0,44,0],[61,0,45,0],[62,2,46,7],[62,11,46,16,"resolveSources"],[62,25,46,30,"resolveSources"],[62,26,46,31,"sources"],[62,33,46,61],[62,35,46,91],[63,4,47,2],[63,8,47,6,"Array"],[63,13,47,11],[63,14,47,12,"isArray"],[63,21,47,19],[63,22,47,20,"sources"],[63,29,47,27],[63,30,47,28],[63,32,47,30],[64,6,48,4],[64,13,48,11,"sources"],[64,20,48,18],[64,21,48,19,"map"],[64,24,48,22],[64,25,48,23,"resolveSource"],[64,38,48,36],[64,39,48,37],[64,40,48,38,"filter"],[64,46,48,44],[64,47,48,45,"Boolean"],[64,54,48,52],[64,55,48,53],[65,4,49,2],[66,4,50,2],[66,8,50,6],[66,12,50,6,"isImageRef"],[66,18,50,16],[66,19,50,16,"isImageRef"],[66,29,50,16],[66,31,50,17,"sources"],[66,38,50,24],[66,39,50,25],[66,41,50,27],[67,6,51,4],[67,10,51,8,"Platform"],[67,26,51,16],[67,27,51,16,"Platform"],[67,35,51,16],[67,36,51,17,"OS"],[67,38,51,19],[67,43,51,24],[67,48,51,29],[67,50,51,31],[68,8,52,6],[68,15,52,13,"sources"],[68,22,52,20],[69,6,53,4],[70,6,54,4],[71,6,55,4],[71,13,55,11,"sources"],[71,20,55,18],[71,21,55,19,"__expo_shared_object_id__"],[71,46,55,44],[72,4,56,2],[73,4,57,2],[73,11,57,9],[73,12,57,10,"resolveSource"],[73,25,57,23],[73,26,57,24,"sources"],[73,33,57,31],[73,34,57,32],[73,35,57,33],[73,36,57,34,"filter"],[73,42,57,40],[73,43,57,41,"Boolean"],[73,50,57,48],[73,51,57,49],[74,2,58,0],[75,0,58,1],[75,3]],"functionMap":{"names":["<global>","isBlurhashString","isThumbhashString","resolveSource","resolveSources"],"mappings":"AAA;OCO;CDE;OEI;CFE;OGE;CHuB;OIK;CJY"},"hasCjsExports":false},"type":"js/module"}]}